from random import choice
import datetime

def cria_frase(url, orgao):
    com_orgao = [
        f"ğŸ¤– O portal com dados pÃºblicos {url} do Ã³rgÃ£o {orgao} parece nÃ£o estar funcionando. Poderia me ajudar a checar?",
        f"ğŸ¤– Hum, parece que o site {url}, mantido pelo Ã³rgÃ£o {orgao}, estÃ¡ apresentando erro. Poderia dar uma olhadinha?",
        f"ğŸ¤– Poxa, tentei acessar {url} e nÃ£o consegui. Este site Ã© mantido pelo Ã³rgÃ£o {orgao}. VocÃª pode confirmar isso?",
        f"ğŸ¤– NÃ£o consigo acessar {url}, e eu sei que ele Ã© mantido pelo Ã³rgÃ£o {orgao}. VocÃª pode me ajudar a verificar?",
        f"ğŸ¤– Sabe o portal {url}, mantido pelo orgÃ£o {orgao}? Ele parece estar fora do ar. VocÃª pode confirmar?",
        f"ğŸ¤– Parece que {url} estÃ¡ apresentando probleminhas para ser acessado. AlguÃ©m pode avisar a(o) {orgao}?",
        f"ğŸ¤– Oi, parece que esse site {url} possui problemas de acesso. {orgao} estÃ¡ sabendo disso?",
        f"ğŸ¤– Portais da transparÃªncia sÃ£o um direito ao acesso Ã  informaÃ§Ã£o {orgao}, mas parece que {url} estÃ¡ fora do ar.",
        f"ğŸ¤– Opa {orgao}, parece que o site {url} nÃ£o estÃ¡ acessÃ­vel como deveria. O que estÃ¡ acontecendo?",
        f"ğŸ¤– Tentei acessar o site {url} e nÃ£o consegui. {orgao} estÃ¡ acontecendo algum problema com essa portal de transparÃªncia?",
    ]
    msg_orgao = choice(com_orgao)
    return msg_orgao

def cria_dados(url, portal, resposta):
    """
    Captura as informaÃ§Ãµes de hora e data da mÃ¡quina, endereÃ§o da pÃ¡gina e
    resposta recebida e as prepara dentro de uma lista para inserir na tabela.
    """
    formato_data = "%Y-%m-%d %H:%m:%S"
    momento = str(datetime.datetime.now().strftime(formato_data))
    momento_utc = datetime.datetime.utcnow().strftime(formato_data)
    dados = [momento, momento_utc, url, portal, resposta]
    return dados

